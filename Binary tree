You are given a table, BST, containing two columns: N and P, where N represents the value of a node in Binary Tree, and P is the parent of N.

Write a query to find the node type of Binary Tree ordered by the value of the node. Output one of the following for each node:

Root: If node is root node.
Leaf: If node is leaf node.
Inner: If node is neither root nor leaf node.

Challenge URL  : https://www.hackerrank.com/challenges/binary-search-tree-1/problem

solution : 
select N, (case when N IN (select N from BST
                            where P is not null
                            intersect 
                            select P from BST) then 'Inner'
               when N IN (select N from BST t1 
                        minus 
                        select P from bst t2) then 'Leaf'
               else 'Root' end) as categ
from
    (select N from BST
     where P is not NULL
    UNION 
    select P from BST
    where P is not NULL) t1; 
